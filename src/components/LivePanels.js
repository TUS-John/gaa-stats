import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import Collapsible from './Collapsible';
import { fmtClock, fmtPlayerLine } from '../utils/format';
export default function LivePanels({ activeYellows, topScorersByTeam, teams, onRestore }) {
    return (_jsxs("div", { className: "grid grid-cols-1 gap-3 mb-3", children: [_jsx("div", { className: "bg-white rounded-2xl shadow p-3", children: _jsx(Collapsible, { title: "Active Sin-bins (Yellow)", defaultOpen: false, children: activeYellows.length === 0 ? (_jsx("div", { className: "text-sm text-gray-500", children: "None" })) : (_jsx("ul", { className: "text-sm space-y-1", children: activeYellows.map((y, i) => {
                            const hasEmpty = teams[y.teamIdx].onField.some((n) => n == null);
                            const canRestore = hasEmpty;
                            return (_jsxs("li", { className: "flex items-center justify-between gap-2", children: [_jsxs("span", { children: [teams[y.teamIdx].name, " \u2014 #", y.number, " ", teams[y.teamIdx].squad[y.number - 1]?.name || (y.number === 0 ? 'Unknown' : '')] }), _jsxs("span", { className: "flex items-center gap-2", children: [_jsxs("span", { className: "font-mono", title: "elapsed / remaining", children: [fmtClock(600 - y.left), " / ", fmtClock(y.left)] }), _jsx("button", { className: `px-2 py-1 rounded ${canRestore ? 'bg-emerald-600 text-white' : 'bg-gray-200 text-gray-500'}`, disabled: !canRestore, onClick: () => onRestore({ teamIdx: y.teamIdx, number: y.number }), children: "Restore" })] })] }, i));
                        }) })) }) }), _jsxs("div", { className: "bg-white rounded-2xl shadow p-3 border-2 border-indigo-500", children: [_jsx("div", { className: "font-semibold mb-2", children: "Top Scorers (Combined)" }), _jsx("div", { className: "grid grid-cols-1 gap-3", children: topScorersByTeam.map((rows, idx) => (_jsxs("div", { children: [_jsx("div", { className: "text-xs uppercase text-gray-500 mb-1", children: teams[idx].name }), rows.length === 0 ? (_jsx("div", { className: "text-sm text-gray-500", children: "\u2014" })) : (_jsx("ul", { className: "text-sm space-y-1", children: rows.map((r, i) => (_jsxs("li", { className: "flex justify-between", children: [_jsxs("span", { children: ["#", r.number, " ", r.name] }), _jsx("span", { className: "font-mono", children: fmtPlayerLine(r) })] }, i))) }))] }, idx))) })] })] }));
}
